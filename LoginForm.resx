<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAAAAAAAEAIADEAwAAFgAAAIlQTkcNChoKAAAADUlIRFIAAAEAAAABAAEDAAAAZrw6JQAAAAFz
        UkdCAdnJLH8AAAAJcEhZcwAADsQAAA7EAZUrDhsAAAAGUExURQAAAH8qPLrOJg0AAAACdFJOUwD/W5Ei
        tQAAA0lJREFUeJzt2U1uGyEUB3CsWbCpwg3KTYp6q64KkRdZ5kpYWfQYoTdgVyoh6GMmrsfxg78Vt0kU
        eeQ4E81PEw9f7z0jRDtMZQ6xOlgQEIgIZAQKAtUh4C8GAYHVc5r1Mz8dU01jICCwGQCDgC4AqAPg22AM
        qCNkHYKAQKKWGoKMQEGgQuAQ8BeDgED8/yBdwduCx0cA9MMQ/Mp6V80AqKR9veuDrKP2dtcH0XjtdbBd
        4G0DUXeBsE57FWUPZFGF9jJteiBuCoEpC9sBYQ9MBzi6pj0p1QFiSgREEZIHdGEGbeVgQRYyNmDFhgdR
        qAW45TFOQBAqNGDc8hgnwAu9ADphgWtXl5digTgAyQFa2s18E/okEwIbDmQEKMTZ+WNQcwkOxDWwDAhr
        YHhQZkB9ygK/BpoBbg0UA+hXnsGGgOSH/fHxIQF1wBTndhDfxdxbp0A+AfsyEI6BuRjoE+APwHRBAEDt
        geOAOwbqLYA4BvIioLvAvy0oz8D078G7mHoXg9doKNRZrwXCmeCF88K9g9nt0RLkz1jExstgQAtpuHit
        PideTOcCPiS9g6n3KsCtUxQuh3EoyfEoTQoo0QooVYPJHkwXYcJ5Vk7rRwCmzTjxhqk7TP7ToXzgxwMs
        QGAJA4ug6vdllO4AWIglVMrBYhCWk7ggjSZobwYlLSyK630rq+8HYC7M7QBQaf/j7+kLvxxYHVdwBVfw
        MYBvq6OztS2jkYt6vr3TxRaP2NDsWzQl4MRU2ODuWzxuL7HJ7DcY/qsw5ZOum3qbZWbAribdgKw+tXcG
        ZF1udJE1JFO3PMg3qqgh+LwHUwfoBioBpqEaSFoCYGSRY3DXHjDpHohmSw1VMxs3Z2C3leJyZvOHBTy0
        rZPC9mZr6kDhqGU4fGdVp0O7D/21JDFMd4f6k84cJQI8sL6G+V6Va2oC9A8aaD9MZ7XMZldjA5YFLZze
        zhdjHzhK21WN3zrjYQ/CEHwZjKhKPZkg0MuoZodcA1lTmpJl4gENNwK9mfUE1GpuyucgKzLhMLs7W2Zt
        b2BJOMGeWk1g2+4MoBFYbT7ywALwe7UByoKKQUQgIOARcAgIAAoCGYGIgAdgvaOObsADh4AAoCCQEUgI
        BAT2D/EHEwaVGWnIth0AAAAASUVORK5CYII=
</value>
  </data>
</root>